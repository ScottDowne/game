<body>
<div id="mapContainer">
  <div id="mapOverflow" class="scale">
    <div id="background" class="scale ground" ></div>
    <div id="foreground72" class="scale ground"></div>
    <div id="foreground98" class="scale ground"></div>
    <div id="playerContainer">
      <div id="player" class="scale"></div>
    </div>
    <div id="collisionContainer">
      <img id="collision" class="scale">
    </div>
  </div>
</div>
<div id="scaleContainer">
  <div id="scale" class="scale"></div>
</div>
<select id="speed">
  <option value="50" >Fast</option>
  <option value="100" selected>Normal</option>
  <option value="200" >Slow</option>
  <option value="0">Fastest</option>
</select>

<style>
body {
  margin: 0;
}
#mapContainer {
  position: absolute;
  height: 168px;
  width: 320px;
}
#playerContainer {
  top: 0;
  position: absolute;
  height: 32px;
  width: 12px;
}
#collisionContainer {
  top: 0;
  position: relative;
  height: 1848px;
  width: 3520px;
}
#scaleContainer {
  height: 1px;
  width: 1px;
}
#speed {
  position: absolute;
  /* change this to scale up */
  /*top: 168px;*/
  top: 336px;
}
.scale {
  overflow: hidden;
  /* change this to scale up */
  height: 200%;
  width: 200%;
}
#background {
  background: url(kq2bgs.png);
  background-size: 1100% 1100%;
}
#player {
  position: absolute;
  top: 60;
  left:140;
  background: url(playerUpdate.png);
  background-size: 800% 400%;
  image-rendering: -moz-crisp-edges;
}
#foreground72 {
/*  z-index: 72;*/
  z-index: 144;
  background: url(kq2bgs72.png);
  background-size: 1100% 1100%;
}
#foreground98 {
/*  z-index: 98;*/
  z-index: 196;
  background: url(kq2bgs98.png);
  background-size: 1100% 1100%;
}
.ground {
  top: 0;
  position: absolute;
  image-rendering: -moz-crisp-edges;
}
#collision {
  position: absolute;
  image-rendering: -moz-crisp-edges;
}
</style>

<script>
var background = document.getElementById( "background" );
var clickMap = document.getElementById( "mapOverflow" );
var player = document.getElementById( "player" );
var collisionImg = document.getElementById( "collision" );
var speedSelect = document.getElementById( "speed" );
var scale = document.getElementById("scale").offsetHeight;
var playerHeight, playerWidth, backgroundHeight, backgroundWidth;

collisionImg.addEventListener( "load", function() {
  var canvas = document.createElement( "canvas" );
  canvas.width = collisionImg.width;
  canvas.height = collisionImg.height;
  canvas.getContext("2d").drawImage(collisionImg, 0, 0, collisionImg.width, collisionImg.height );
  var collisionData = canvas.getContext("2d");
  playerHeight = player.offsetHeight;
  playerWidth = player.offsetWidth;
  backgroundHeight = background.offsetHeight;
  backgroundWidth = background.offsetWidth;
  var allCollisionData = collisionData.getImageData( 0, 0, backgroundWidth, backgroundHeight ).data;

  function checkCollision( playerLeft, playerTop, backgroundLeft, backgroundTop ) {
    var top = playerTop + playerHeight;
    var width = backgroundWidth;
    for (var i = 0; i < playerWidth; i++) {
      if ( allCollisionData[ ( 4 * ( top ) * width ) + ( 4 * ( playerLeft + i ) ) + 3 ] ) {
        return true;
      }
    }
    return false;
  }

  var currentBackground = {
    top: 0,
    left: 0
  };

  var playerPosition = {
    top: player.offsetTop,
    left: player.offsetLeft
  }

  player.style.zIndex = playerPosition.top + playerHeight;

  var backgroundMod = {
    top: backgroundHeight,
    left: backgroundWidth
  };

  var currentKeys = {
    up: false,
    left: false,
    right: false,
    down: false
  };

  var keys = {
    up: 38,
    left: 37,
    right: 39,
    down: 40
  };

  var speed = speedSelect.value;

  function speedSelectChange( e ) {
    document.addEventListener( "keydown", keyDown, false);
    speed = this.value;
    this.blur();
  }

  function speedSelectFocus( e ) {
    document.removeEventListener( "keydown", keyDown, false);
    clearMovement();
  }

  speedSelect.addEventListener( "change", speedSelectChange, false );
  speedSelect.addEventListener( "focus", speedSelectFocus, false );
  speedSelect.addEventListener( "blur", speedSelectChange, false );

  var moving = false;
  var movementTimeout;
  var numberOfFrames = 8;

  var frameMod = {
    left: playerWidth,
    top: playerHeight
  };

  var movementMod = {
    left: 2 * scale,
    top: 1 * scale
  };

  var currentFrame = {
    top: 0,
    left: 0
  };

  function clearKeys() {
    currentKeys[ "up" ] = false;
    currentKeys[ "down" ] = false;
    currentKeys[ "left" ] = false;
    currentKeys[ "right" ] = false;
  }

  function clearMovement() {
    clearTimeout( movementTimeout );
    clearKeys();
    moving = false;
  }

  function processMovement() {
    var moved = false;
    if ( currentKeys.up ) {
      currentFrame.top = 1;
      if ( !checkCollision( playerPosition.left, playerPosition.top-movementMod.top ) ) {
        moved = true;
        playerPosition.top-=movementMod.top;
      }
    }
    if ( currentKeys.down ) {
      currentFrame.top = 2;
      if ( !checkCollision( playerPosition.left, playerPosition.top+movementMod.top ) ) {
        moved = true;
        playerPosition.top+=movementMod.top;
      }
    }
    if ( currentKeys.left ) {
      currentFrame.top = 3;
      if ( !checkCollision( playerPosition.left-movementMod.left, playerPosition.top ) ) {
        moved = true;
        playerPosition.left-=movementMod.left;
      }
    }
    if ( currentKeys.right ) {
      currentFrame.top = 0;
      if ( !checkCollision( playerPosition.left+movementMod.left, playerPosition.top ) ) {
        moved = true;
        playerPosition.left+=movementMod.left;
      }
    }
    
    if ( playerPosition.top < 0 ) {
      currentBackground.top++;
      playerPosition.top = backgroundHeight-playerHeight;
      clearMovement();
    } else if ( playerPosition.top > (backgroundHeight-playerHeight) ) {
      currentBackground.top--;
      playerPosition.top = 0;
      clearMovement();
    }

    if ( playerPosition.left < 0 ) {
      currentBackground.left++;
      playerPosition.left = backgroundWidth-playerWidth;
      clearMovement();
    } else if ( playerPosition.left > (backgroundWidth-playerWidth) ) {
      currentBackground.left--;
      playerPosition.left = 0;
      clearMovement();
    }
    player.style.left = ( playerPosition.left ) + "px";
    player.style.top = ( playerPosition.top ) + "px";

    if ( moved ) {
      player.style.zIndex = playerPosition.top + playerHeight;
      currentFrame.left--;
      if ( currentFrame >= numberOfFrames ) {
        currentFrame.left = 0;
      }
    }
    player.style.backgroundPosition = ( currentFrame.left * frameMod.left ) + "px " + ( currentFrame.top * frameMod.top ) + "px"; 
    background.style.backgroundPosition = ( currentBackground.left * backgroundMod.left ) + "px " + ( currentBackground.top * backgroundMod.top ) + "px";
  }

  function startMovement() {
    if ( !moving ) {
      return;
    }
    processMovement();
    movementTimeout = setTimeout( startMovement, speed );
  }

  function keyDown( e ) {
    document.removeEventListener( "keydown", keyDown, false);
    document.addEventListener( "keyup", keyUp, false);
    for ( var key in keys ) {
      if ( e.keyCode === keys[ key ] ) {
        clearTimeout( movementTimeout );
        if ( currentKeys[ key ] ) {
          currentKeys[ key ] = false;
          moving = false;
        } else {
          clearKeys();
          currentKeys[ key ] = true;
          moving = true;
          startMovement();
        }
        return;
      }
    }
  }

  function onBackgroundClick( x, y ) {
    removeClick();
    var topDiff = y - playerPosition.top;
    var leftDiff = x - playerPosition.left;
    var keyCode;
    if (Math.abs(topDiff) < Math.abs(leftDiff)) {
      if ( leftDiff > 0 ) {
        keyCode = 39;
      } else {
        keyCode = 37;
      }
    } else {
      if ( topDiff > 0 ) {
        keyCode = 40;
      } else {
        keyCode = 38;
      }
    }
    for ( var key in keys ) {
      if ( keyCode === keys[ key ] ) {
        clearTimeout( movementTimeout );
        if ( currentKeys[ key ] ) {
          currentKeys[ key ] = false;
          moving = false;
        } else {
          clearKeys();
          currentKeys[ key ] = true;
          moving = true;
          startMovement();
        }
        addClick();
        return;
      }
    }
    addClick();
  }

  function keyUp( e ) {
    document.addEventListener( "keydown", keyDown, false);
    document.removeEventListener( "keyup", keyUp, false);
  }

  function onBackgroundMouseClick( e ) {
    onBackgroundClick( e.clientX, e.clientY );
  }
  function onBackgroundTouchClick( e ) {
    var item = e.touches.item( 0 );
    onBackgroundClick( item.clientX, item.clientY );
  }

  function addClick() {}
  function removeClick() {}
  function setMouseEvents( e ) {
    addClick = function() {
      clickMap.addEventListener( "mousedown", onBackgroundMouseClick, false);
    }
    removeClick = function() {
      clickMap.removeEventListener( "mousedown", onBackgroundMouseClick, false);
    }
    clickMap.removeEventListener( "touchstart", setTouchEvents, false);
    clickMap.removeEventListener( "mousedown", setMouseEvents, false);
    onBackgroundClick( e.clientX, e.clientY );
  }
  function setTouchEvents( e ) {
    addClick = function() {
      clickMap.addEventListener( "touchstart", onBackgroundTouchClick, false);
    }
    removeClick = function() {
      clickMap.removeEventListener( "touchstart", onBackgroundTouchClick, false);
    }
    clickMap.removeEventListener( "mousedown", setMouseEvents, false);
    clickMap.removeEventListener( "touchstart", setTouchEvents, false);
    onBackgroundClick( e );
  }

  clickMap.addEventListener( "mousedown", setMouseEvents, false);
  clickMap.addEventListener( "touchstart", setTouchEvents, false);
  document.addEventListener( "keydown", keyDown, false);
}, false );

collisionImg.src = "kq2bgsCollision.png";
</script>
</body>
